#! /usr/bin/python
# container_manager is part of the dockoo system
# For Open-NSM and Senior Thesis at UIUC
# November 1, 2015
# SEE https://github.com/open-nsm/dockoo.git FOR MORE INFO
import sys
import time
import subprocess

__author__ = 'Shane Rogers, Jon Schipp'

def create_command(container_name, malware_file):
  command = "sudo docker run -t -i -v /home/ubuntu/malware_files:/mnt/malware_files "
  command = command + container_name
  if container_name == "strace":
    command = command + " /usr/bin/strace /mnt/malware_files/" + malware_file
    return command
  else:
    return 0

def report(start_time, end_time):
    print "Start time was", start_time
    print "Completion time was", end_time
    print "Elapsed time was", end_time - start_time

def main():
  if len(sys.argv) != 3:
    print("Usage: ./dockoo <docker image name> <malware filename> ")
    print "For more info try: ./dockoo --help"
    exit()

  if sys.argv[1] == "--help":
    print "#  This function takes as input the name of a malware file located in dockoo/malware_files/"
    print "#  and the name of malware container image and spins the container up while passing the malware to it."
    print "#  WARNING"
    print "#  This function does not currently sanitize user input in any way, so if you"
    print "#  give it a funny value for the malware file name or try to create a container"
    print "#  from a nonexistent image, it will break.  Send questions or comments to shane@shanerogers.info"
    exit()
  else:
    image_name = sys.argv[1]
    malware_file = sys.argv[2]
    command = create_command(image_name, malware_file)
    start_time = time.time()
    subprocess.call(command, shell=True)
    end_time = time.time()
    report(start_time, end_time)

if __name__ == "__main__":
    main()
