#! /usr/bin/python
# Dockoo
# Open-NSM project and Shane's Senior Thesis at UIUC
# November 1, 2015
import sys
import time
import subprocess
import argparse

__author__ = 'Shane Rogers, Jon Schipp'

def create_command(image, filename, debug):
  command = "docker run -it -v %s:%s %s %s %s" % (filename, filename, image, image, filename)
  if debug: 
    print 'Debug: %s' % command
  return command

def usage():
  usage = '''
  Dockoo - A Docker based malware analysis system
  '''
  return usage

def report(start_time, end_time):
  print "Start time was", start_time
  print "Completion time was", end_time
  print "Elapsed time was", end_time - start_time

def arguments():
  parser = argparse.ArgumentParser(description=usage())
  parser.add_argument("-I", "--image", type=str, help="Docker image to run", required=True)
  parser.add_argument("-r", "--read",  type=str, help="Malware file to read", required=True)
  parser.add_argument("-d", "--debug", help="Enable debug output", action='store_true')
  args = parser.parse_args()

  filename = args.read
  image    = args.image
  debug    = args.debug

  return(image, filename, debug)

def main():
  image, filename, debug = arguments()

  command = create_command(image, filename, debug)
  start_time = time.time()
  subprocess.call(command, shell=True)
  end_time = time.time()
  report(start_time, end_time)

if __name__ == "__main__":
    main()
